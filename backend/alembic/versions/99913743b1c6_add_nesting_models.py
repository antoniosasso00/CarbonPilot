"""Add nesting models

Revision ID: 99913743b1c6
Revises: 
Create Date: 2025-05-08 16:13:36.219121

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '99913743b1c6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('autoclaves',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('width', sa.Float(), nullable=False),
    sa.Column('height', sa.Float(), nullable=False),
    sa.Column('depth', sa.Float(), nullable=False),
    sa.Column('num_valves', sa.Integer(), nullable=True),
    sa.Column('num_vacuum_lines', sa.Integer(), nullable=True),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_autoclaves_id'), 'autoclaves', ['id'], unique=False)
    op.create_table('catalog_parts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('default_width', sa.Float(), nullable=False),
    sa.Column('default_height', sa.Float(), nullable=False),
    sa.Column('default_cycle_code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_index(op.f('ix_catalog_parts_id'), 'catalog_parts', ['id'], unique=False)
    op.create_table('nesting_layouts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('autoclave_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['autoclave_id'], ['autoclaves.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nesting_layouts_id'), 'nesting_layouts', ['id'], unique=False)
    op.create_table('parts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('part_number', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('width', sa.Float(), nullable=False),
    sa.Column('height', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('CREATED', 'LAMINATING', 'READY', 'AUTOCLAVED', name='partstatus'), nullable=False),
    sa.Column('cycle_code', sa.String(), nullable=True),
    sa.Column('source_catalog_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['source_catalog_id'], ['catalog_parts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_parts_id'), 'parts', ['id'], unique=False)
    op.create_index(op.f('ix_parts_part_number'), 'parts', ['part_number'], unique=True)
    op.create_table('schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('autoclave_id', sa.Integer(), nullable=False),
    sa.Column('layout_id', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('color', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['autoclave_id'], ['autoclaves.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schedules_id'), 'schedules', ['id'], unique=False)
    op.create_index(op.f('ix_schedules_start_time'), 'schedules', ['start_time'], unique=False)
    op.create_table('nesting_placements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('layout_id', sa.Integer(), nullable=False),
    sa.Column('part_id', sa.Integer(), nullable=False),
    sa.Column('x', sa.Float(), nullable=False),
    sa.Column('y', sa.Float(), nullable=False),
    sa.Column('width', sa.Float(), nullable=False),
    sa.Column('height', sa.Float(), nullable=False),
    sa.Column('rotated', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['layout_id'], ['nesting_layouts.id'], ),
    sa.ForeignKeyConstraint(['part_id'], ['parts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nesting_placements_id'), 'nesting_placements', ['id'], unique=False)
    op.create_table('schedule_parts',
    sa.Column('schedule_id', sa.Integer(), nullable=True),
    sa.Column('part_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['part_id'], ['parts.id'], ),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedules.id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('schedule_parts')
    op.drop_index(op.f('ix_nesting_placements_id'), table_name='nesting_placements')
    op.drop_table('nesting_placements')
    op.drop_index(op.f('ix_schedules_start_time'), table_name='schedules')
    op.drop_index(op.f('ix_schedules_id'), table_name='schedules')
    op.drop_table('schedules')
    op.drop_index(op.f('ix_parts_part_number'), table_name='parts')
    op.drop_index(op.f('ix_parts_id'), table_name='parts')
    op.drop_table('parts')
    op.drop_index(op.f('ix_nesting_layouts_id'), table_name='nesting_layouts')
    op.drop_table('nesting_layouts')
    op.drop_index(op.f('ix_catalog_parts_id'), table_name='catalog_parts')
    op.drop_table('catalog_parts')
    op.drop_index(op.f('ix_autoclaves_id'), table_name='autoclaves')
    op.drop_table('autoclaves')
    # ### end Alembic commands ###
